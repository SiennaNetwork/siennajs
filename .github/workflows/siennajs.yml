name: SiennaJS
on: [push, pull_request]

jobs:
  js:
    name: check, build, fix, and release
    runs-on: ubuntu-latest
    steps:

      - name: Get source
        uses: actions/checkout@v2
        with: { submodules: recursive }

      - name: Get Node 16
        uses: actions/setup-node@v3
        with: { node-version: 16 }

      - name: Get PNPM
        run:  npm i -g pnpm@^7.5.2

      - name: Don't compile native modules
        run:  pnpm config set node-gyp /bin/true

      - name: Install deps
        run:  pnpm i

      - name: Check types
        run:  npm run check

      - name: Build for packaging
        run:  npm run release:ci

      - name: Package as tarball
        #see: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions
        run:  echo "::set-output name=file::$(npm pack | tail -n1)" # lol
        id:   pack

      - name: Check that tarball can be installed, imported, and required
        run: |
          export SRC=$(pwd)
          export TAG=$(printf $GITHUB_REF | cut -c11-)
          echo $TAG
          mkdir /tmp/downstream
          cd /tmp/downstream
          echo "{}" > package.json
          npm i --save $SRC/${{ steps.pack.outputs.file }}
          cat package.json
          node -e 'import("siennajs").then(console.log)'
          node -e 'console.log(require("siennajs"))'
          cd $SRC
          rm -rf /tmp/downstream

      - name: Upload release
        if:   startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.pack.outputs.file }}
          body:  Automated release by https://github.com/softprops/action-gh-release

      - name: Check that release can be installed, imported, and required
        if:   startsWith(github.ref, 'refs/tags/')
        run: |
          export TAG=$(printf $GITHUB_REF | cut -c11-)
          export URL=https://github.com/SiennaNetwork/siennajs/releases/download
          mkdir /tmp/downstream
          cd /tmp/downstream
          echo "{}" > package.json
          npm i --save $URL/$TAG/siennajs-$TAG.tgz
          cat package.json
          node -e 'import("siennajs").then(console.log)'
          node -e 'console.log(require("siennajs"))'
